{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../src/test/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application, ProjectReflection } from '..';\r\nimport * as FS from 'fs-extra';\r\nimport * as Path from 'path';\r\nimport Assert = require('assert');\r\n\r\nfunction getFileIndex(base, dir: string = '', results: string[] = []) {\r\n    const files = FS.readdirSync(Path.join(base, dir));\r\n    files.forEach(function(file) {\r\n        file = Path.join(dir, file);\r\n        if (FS.statSync(Path.join(base, file)).isDirectory()) {\r\n            getFileIndex(base, file, results);\r\n        } else {\r\n            results.push(file);\r\n        }\r\n    });\r\n\r\n    return results.sort();\r\n}\r\n\r\nfunction compareDirectories(a, b) {\r\n    const aFiles = getFileIndex(a);\r\n    const bFiles = getFileIndex(b);\r\n    Assert.deepEqual(aFiles, bFiles, `Generated files differ. between \"${ a }\" and \"${ b }\"`);\r\n\r\n    const gitHubRegExp = /https:\\/\\/github.com\\/[A-Za-z0-9\\-]+\\/typedoc\\/blob\\/[^\\/]*\\/examples/g;\r\n    aFiles.forEach(function (file) {\r\n        const aSrc = FS.readFileSync(Path.join(a, file), {encoding: 'utf-8'})\r\n            .replace('\\r', '')\r\n            .replace(gitHubRegExp, '%GITHUB%');\r\n        const bSrc = FS.readFileSync(Path.join(b, file), {encoding: 'utf-8'})\r\n            .replace('\\r', '')\r\n            .replace(gitHubRegExp, '%GITHUB%');\r\n\r\n        if (aSrc !== bSrc) {\r\n            const err: any = new Error(`File contents of \"${file}\" differ.`);\r\n            err.expected = aSrc;\r\n            err.actual = bSrc;\r\n            err.showDiff = true;\r\n            throw err;\r\n        }\r\n    });\r\n}\r\n\r\ndescribe('Renderer', function() {\r\n    const src = Path.join(__dirname, '..', '..', 'examples', 'basic', 'src');\r\n    const out = Path.join(__dirname, '..', 'tmp', 'test');\r\n    let app: Application, project: ProjectReflection;\r\n\r\n    before(function() {\r\n        FS.removeSync(out);\r\n    });\r\n\r\n    after(function() {\r\n        FS.removeSync(out);\r\n    });\r\n\r\n    it('constructs', function() {\r\n        app = new Application({\r\n            mode:   'Modules',\r\n            logger: 'console',\r\n            target: 'ES5',\r\n            module: 'CommonJS',\r\n            gaSite: 'foo.com' // verify theme option without modifying output\r\n        });\r\n    });\r\n\r\n    it('converts basic example', function() {\r\n        this.timeout(0);\r\n        const input = app.expandInputFiles([src]);\r\n        project = app.convert(input);\r\n\r\n        Assert(app.logger.errorCount === 0, 'Application.convert returned errors');\r\n        Assert(project instanceof ProjectReflection, 'Application.convert did not return a reflection');\r\n    });\r\n\r\n    it('renders basic example', function() {\r\n        this.timeout(0);\r\n        const result = app.generateDocs(project, out);\r\n        Assert(result === true, 'Application.generateDocs returned errors');\r\n\r\n        FS.removeSync(Path.join(out, 'assets'));\r\n        compareDirectories(Path.join(__dirname, 'renderer', 'specs'), out);\r\n    });\r\n});\r\n"]}