{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/test/events.ts"],"names":[],"mappings":";;;;;;;;;;;;AASA,+BAAkC;AAClC,0BAA4B;AAC5B,8CAA6D;AAE7D;IAAqB,0BAAe;IAApC;;IAIA,CAAC;IAAD,aAAC;AAAD,CAAC,AAJD,CAAqB,wBAAe,GAInC;AAED,QAAQ,CAAC,QAAQ,EAAE;IACf,EAAE,CAAC,gBAAgB,EAAE;QACjB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAEhB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,gCAAgC,CAAC,CAAC;QAE/D,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QACzC,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAEhB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACf,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QACzC,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAEhB,IAAM,SAAS,GAAG;YACd,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC;QAEF,GAAG,CAAC,EAAE,CAAC;YACH,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;SACf,EAAE,GAAG,CAAC,CAAC;QAER,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,GAAG,CAAC;YACJ,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;SACf,EAAE,GAAG,CAAC,CAAC;QACR,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE;QAC9D,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAEhB,IAAM,SAAS,GAAG;YACd,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC;QAEF,GAAG,CAAC,EAAE,CAAC;YACH,OAAO,EAAE,SAAS;SACrB,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,GAAG,CAAC;YACJ,KAAK,EAAE,SAAS;SACnB,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QAC9C,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,GAAG,CAAC,EAAE,CAAC;YACH,CAAC,EAAE;gBACC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,wCAAwC,CAAC,CAAC;YAChF,CAAC;SACJ,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEzB,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,CAAC,EAAE;gBACC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,4CAA4C,CAAC,CAAC;YACpF,CAAC;SACJ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC7B,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QAEvB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEtB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC7C,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,EAAE,GAAG;YACP,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QAEF,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEnB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACnB,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;QACjC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAE1B,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QAClC,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,EAAE,GAAG;YACP,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QACF,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAClB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QACnC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAC1B,CAAC,CAAC,GAAG,EAAE,CAAC;QACR,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/B,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,cAAc,EAAE;QAEf,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QAEjB,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAAC;QACF,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC;QACF,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACtC,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACtC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;QAClF,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACjC,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE;YACrB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE;YACrB,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC3C,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE;YACrB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC7C,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE;YACV,MAAM,EAAE;gBACJ,MAAM,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;SACJ,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACpB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE;YACV,MAAM,EAAE;gBACJ,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;SACJ,CAAC,CAAC;QACH,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACpB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE;QAC1D,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEjB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,aAAa,EAAE,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE;QACrC,IAAM,CAAC,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,CAAC,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,EAAE,GAAG,cAAa,CAAC,CAAC;QAC1B,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAElB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACrD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE;QACvD,IAAM,CAAC,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,CAAC,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,EAAE,GAAG,cAAa,CAAC,CAAC;QAC1B,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAElB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC1C,IAAM,CAAC,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,CAAC,GAAQ,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,EAAE,GAAG,cAAc,CAAC,CAAC;QAE3B,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,GAAG,EAAE,CAAC;QACR,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACf,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAChB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE;QACpD,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QAEvB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEtB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,EAAE;YACnB,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAE1B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAQ,CAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6EAA6E,EAAE;QAC9E,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE;YACrB,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAQ,CAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE;QACpD,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE;YACd,GAAG,EAAE;gBACD,MAAM,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;YACD,GAAG,EAAE;gBACD,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;SACJ,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAQ,CAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE;QACxD,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE;YACd,GAAG,EAAE;gBACD,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;YACvB,CAAC;YACD,GAAG,EAAE;gBACD,MAAM,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;SACJ,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE;QACvD,IAAM,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QACvB,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC7B,IAAI,CAAU,EAAE,CAAU,CAAC;QAC3B,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAChB,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,UAAU,KAAK;YACzB,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,EAAE,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;gBAAC,CAAC,GAAG,IAAI,CAAC;YAAC,CAAC;YAChC,EAAE,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;gBAAC,CAAC,GAAG,IAAI,CAAC;YAAC,CAAC;QACpC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClB,MAAM,CAAC,CAAC,CAAC,CAAC;QACV,MAAM,CAAC,CAAC,CAAC,CAAC;QACV,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAChC,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,QAAQ,GAAG;YACb,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC;QAEF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,iDAAiD,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACtC,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAM,QAAQ,GAAG;YACb,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC3B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;QAClF,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,8CAA8C,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QAC9C,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,QAAQ,GAAG;YACb,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;YACjB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC/B,CAAC,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC1B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,wCAAwC,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QACpC,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC;QACF,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;QAClF,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC1C;YAAA;YAIA,CAAC;YAHG,8BAAU,GAAV;gBACI,MAAM,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAC;YACrD,CAAC;YACL,gBAAC;QAAD,CAAC,AAJD,IAIC;QAED,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC7B,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;YACjB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACxB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAAC;QACF,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,OAAO,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE;QAC9C,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,IAAI,GAAG;YACT,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QACF,IAAM,MAAM,GAAG;YACX,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC;QACF,IAAM,OAAO,GAAG;YACZ,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,iCAAiC,CAAC,CAAC;QAE5D,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,kCAAkC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE;QAC7D,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,IAAI,GAAG;YACT,OAAO,EAAE,CAAC;QACd,CAAC,CAAC;QAEF,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE;YACR,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAElB,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QACtC,IAAI,MAAM,EAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uFAAuF,EAAE;QACxF,IAAM,IAAI,GAAU,IAAI,MAAM,EAAG,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC;YACV,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC3C,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE;YACd,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE;YACd,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE;QAC5C,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,OAAO,GAAG;YACZ,MAAM,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC,CAAC;QACF,IAAM,IAAI,GAAG;YACT,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC3B,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACxB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpB,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE;QAC/C,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,MAAM,EAAE;QAEP,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;QAEjB,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAAC;QACF,IAAM,KAAK,GAAG;YACV,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC;QACF,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;QAClF,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,kDAAkD,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE;QACnB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,CAAC,GAAG;YACN,KAAK,IAAI,CAAC,CAAC;QACf,CAAC,CAAC;QAEF,IAAM,CAAC,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC1C,IAAM,CAAC,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAExC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACnB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEnB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE;QACnB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,CAAC,GAAG;YACN,KAAK,IAAI,CAAC,CAAC;QACf,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aAChB,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;aACd,OAAO,CAAC,OAAO,CAAC;aAChB,OAAO,CAAC,OAAO,CAAC,CAAC;QAErB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE;QAChB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,CAAC,GAAG;YACN,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACrB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE;QACvB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAEhB,IAAM,SAAS,GAAG;YACd,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC;YACL,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;YACZ,CAAC,EAAE,SAAS;SACf,EAAE,GAAG,CAAC,CAAC;QAER,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAE7B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAChC,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACd,MAAM,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,EAAE,OAAO,CAAC,CAAC;QACZ,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC7B,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,UAAU,IAAI;QAC9C,IAAM,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC,CAAC;YACb,IAAI,EAAE,CAAC;QACX,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,IAAM,GAAG,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAC/C,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YACZ,KAAK,IAAI,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QAClC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,CAAC,GAAG;YACN,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC;QACF,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,cAAa,CAAC,CAAC,CAAC;QAClC,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE;YACZ,KAAK,IAAI,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC1C,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YACZ,KAAK,IAAI,CAAC,CAAC;YACX,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEnB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QAC7B,IAAI,MAAM,EAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE;QAC5C,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QAClB,GAAI,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAChC,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;QAC1B,IAAM,EAAE,GAAG,cAAa,CAAC,CAAC;QAE1B,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC;QAC7D,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE;QACnD,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAM,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;QACzB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,CAAC;YACpC,MAAM,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACpB,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,qBAAqB,EAAE;IAC5B,EAAE,CAAC,uBAAuB,EAAE;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,KAAK,GAAG,IAAI,cAAK,CAAC,SAAS,CAAC,CAAC;QACnC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,CAAC;YAC3B,MAAM,CAAC,CAAC,YAAY,cAAK,CAAC,CAAC;YAC3B,KAAK,IAAI,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE;QACpB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAC5B,IAAM,KAAK,GAAG,IAAI,cAAK,CAAC,SAAS,CAAC,CAAC;QACnC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE;QAC7B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAC5B,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAClF,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;QACpF,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["// Backbone.js 1.2.3\r\n// (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n// Backbone may be freely distributed under the MIT license.\r\n// For all details and documentation:\r\n// http://backbonejs.org\r\n//\r\n// This test case was taken from\r\n// https://github.com/jashkenas/backbone/blob/6b927eb5e7081af16f97d9c15e34b030624a68f9/test/events.js\r\n\r\nimport Assert = require('assert');\r\nimport * as _ from 'lodash';\r\nimport { EventDispatcher, Event } from '../lib/utils/events';\r\n\r\nclass Events extends EventDispatcher {\r\n    counter?: number;\r\n    counterA?: number;\r\n    counterB?: number;\r\n}\r\n\r\ndescribe('Events', function () {\r\n    it('on and trigger', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n\r\n        obj.on('event', function () {\r\n            obj.counter += 1;\r\n        });\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counter, 1, 'counter should be incremented.');\r\n\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counter, 5, 'counter should be incremented five times.');\r\n    });\r\n\r\n    it('binding and triggering multiple events', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n\r\n        obj.on('a b c', function () {\r\n            obj.counter += 1;\r\n        });\r\n\r\n        obj.trigger('a');\r\n        Assert.equal(obj.counter, 1);\r\n\r\n        obj.trigger('a b');\r\n        Assert.equal(obj.counter, 3);\r\n\r\n        obj.trigger('c');\r\n        Assert.equal(obj.counter, 4);\r\n\r\n        obj.off('a c');\r\n        obj.trigger('a b c');\r\n        Assert.equal(obj.counter, 5);\r\n    });\r\n\r\n    it('binding and triggering with event maps', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n\r\n        const increment = function () {\r\n            this.counter += 1;\r\n        };\r\n\r\n        obj.on({\r\n            a: increment,\r\n            b: increment,\r\n            c: increment\r\n        }, obj);\r\n\r\n        obj.trigger('a');\r\n        Assert.equal(obj.counter, 1);\r\n\r\n        obj.trigger('a b');\r\n        Assert.equal(obj.counter, 3);\r\n\r\n        obj.trigger('c');\r\n        Assert.equal(obj.counter, 4);\r\n\r\n        obj.off({\r\n            a: increment,\r\n            c: increment\r\n        }, obj);\r\n        obj.trigger('a b c');\r\n        Assert.equal(obj.counter, 5);\r\n    });\r\n\r\n    it('binding and triggering multiple event names with event maps', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n\r\n        const increment = function () {\r\n            this.counter += 1;\r\n        };\r\n\r\n        obj.on({\r\n            'a b c': increment\r\n        });\r\n\r\n        obj.trigger('a');\r\n        Assert.equal(obj.counter, 1);\r\n\r\n        obj.trigger('a b');\r\n        Assert.equal(obj.counter, 3);\r\n\r\n        obj.trigger('c');\r\n        Assert.equal(obj.counter, 4);\r\n\r\n        obj.off({\r\n            'a c': increment\r\n        });\r\n        obj.trigger('a b c');\r\n        Assert.equal(obj.counter, 5);\r\n    });\r\n\r\n    it('binding and trigger with event maps context', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n        const context = {};\r\n\r\n        obj.on({\r\n            a: function () {\r\n                Assert.strictEqual(this, context, 'defaults `context` to `callback` param');\r\n            }\r\n        }, context).trigger('a');\r\n\r\n        obj.off().on({\r\n            a: function () {\r\n                Assert.strictEqual(this, context, 'will not override explicit `context` param');\r\n            }\r\n        }, this, context).trigger('a');\r\n    });\r\n\r\n    it('listenTo and stopListening', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n\r\n        a.listenTo(b, 'all', function () {\r\n            Assert(true);\r\n        });\r\n        b.trigger('anything');\r\n\r\n        a.listenTo(b, 'all', function () {\r\n            Assert(false);\r\n        });\r\n        a.stopListening();\r\n        b.trigger('anything');\r\n    });\r\n\r\n    it('listenTo and stopListening with event maps', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        const cb = function () {\r\n            Assert(true);\r\n        };\r\n\r\n        a.listenTo(b, {event: cb});\r\n        b.trigger('event');\r\n\r\n        a.listenTo(b, {event2: cb});\r\n        b.on('event2', cb);\r\n        a.stopListening(b, {event2: cb});\r\n        b.trigger('event event2');\r\n\r\n        a.stopListening();\r\n        b.trigger('event event2');\r\n    });\r\n\r\n    it('stopListening with omitted args', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        const cb = function () {\r\n            Assert(true);\r\n        };\r\n        a.listenTo(b, 'event', cb);\r\n        b.on('event', cb);\r\n        a.listenTo(b, 'event2', cb);\r\n        a.stopListening(null, {event: cb});\r\n        b.trigger('event event2');\r\n        b.off();\r\n        a.listenTo(b, 'event event2', cb);\r\n        a.stopListening(null, 'event');\r\n        a.stopListening();\r\n        b.trigger('event2');\r\n    });\r\n\r\n    it('listenToOnce', function () {\r\n        // Same as the previous test, but we use once rather than having to explicitly unbind\r\n        const obj = new Events();\r\n        obj.counterA = 0;\r\n        obj.counterB = 0;\r\n\r\n        const incrA = function () {\r\n            obj.counterA += 1;\r\n            obj.trigger('event');\r\n        };\r\n        const incrB = function () {\r\n            obj.counterB += 1;\r\n        };\r\n        obj.listenToOnce(obj, 'event', incrA);\r\n        obj.listenToOnce(obj, 'event', incrB);\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counterA, 1, 'counterA should have only been incremented once.');\r\n        Assert.equal(obj.counterB, 1, 'counterB should have only been incremented once.');\r\n    });\r\n\r\n    it('listenToOnce and stopListening', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        a.listenToOnce(b, 'all', function () {\r\n            Assert(true);\r\n        });\r\n        b.trigger('anything');\r\n        b.trigger('anything');\r\n        a.listenToOnce(b, 'all', function () {\r\n            Assert(false);\r\n        });\r\n        a.stopListening();\r\n        b.trigger('anything');\r\n    });\r\n\r\n    it('listenTo, listenToOnce and stopListening', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        a.listenToOnce(b, 'all', function () {\r\n            Assert(true);\r\n        });\r\n        b.trigger('anything');\r\n        b.trigger('anything');\r\n        a.listenTo(b, 'all', function () {\r\n            Assert(false);\r\n        });\r\n        a.stopListening();\r\n        b.trigger('anything');\r\n    });\r\n\r\n    it('listenTo and stopListening with event maps', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        a.listenTo(b, {\r\n            change: function () {\r\n                Assert(true);\r\n            }\r\n        });\r\n        b.trigger('change');\r\n        a.listenTo(b, {\r\n            change: function () {\r\n                Assert(false);\r\n            }\r\n        });\r\n        a.stopListening();\r\n        b.trigger('change');\r\n    });\r\n\r\n    it('listenTo yourself', function () {\r\n        const e = new Events();\r\n        e.listenTo(e, 'foo', function () {\r\n            Assert(true);\r\n        });\r\n        e.trigger('foo');\r\n    });\r\n\r\n    it('listenTo yourself cleans yourself up with stopListening', function () {\r\n        const e = new Events();\r\n        e.listenTo(e, 'foo', function () {\r\n            Assert(true);\r\n        });\r\n        e.trigger('foo');\r\n\r\n        e.listenTo(e, 'foo', function () {\r\n            Assert(false);\r\n        });\r\n        e.stopListening();\r\n        e.trigger('foo');\r\n    });\r\n\r\n    it('stopListening cleans up references', function () {\r\n        const a: any = new Events();\r\n        const b: any = new Events();\r\n        const fn = function () {};\r\n        b.on('event', fn);\r\n\r\n        a.listenTo(b, 'event', fn).stopListening();\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenTo(b, 'event', fn).stopListening(b);\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenTo(b, 'event', fn).stopListening(b, 'event');\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenTo(b, 'event', fn).stopListening(b, 'event', fn);\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n    });\r\n\r\n    it('stopListening cleans up references from listenToOnce', function () {\r\n        const a: any = new Events();\r\n        const b: any = new Events();\r\n        const fn = function () {};\r\n        b.on('event', fn);\r\n\r\n        a.listenToOnce(b, 'event', fn).stopListening();\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenToOnce(b, 'event', fn).stopListening(b);\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenToOnce(b, 'event', fn).stopListening(b, 'event');\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenToOnce(b, 'event', fn).stopListening(b, 'event', fn);\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._events.event), 1);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n    });\r\n\r\n    it('listenTo and off cleaning up references', function () {\r\n        const a: any = new Events();\r\n        const b: any = new Events();\r\n        const fn = function () { };\r\n\r\n        a.listenTo(b, 'event', fn);\r\n        b.off();\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenTo(b, 'event', fn);\r\n        b.off('event');\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenTo(b, 'event', fn);\r\n        b.off(null, fn);\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n\r\n        a.listenTo(b, 'event', fn);\r\n        b.off(null, null, a);\r\n        Assert.equal(_.size(a._listeningTo), 0);\r\n        Assert.equal(_.size(b._listeners), 0);\r\n    });\r\n\r\n    it('listenTo and stopListening cleaning up references', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n\r\n        a.listenTo(b, 'all', function () {\r\n            Assert(true);\r\n        });\r\n        b.trigger('anything');\r\n\r\n        a.listenTo(b, 'other', function () {\r\n            Assert(false);\r\n        });\r\n        a.stopListening(b, 'other');\r\n        a.stopListening(b, 'all');\r\n\r\n        Assert.equal(_.size((<any> a)._listeningTo), 0);\r\n    });\r\n\r\n    it('listenToOnce without context cleans up references after the event has fired', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        a.listenToOnce(b, 'all', function () {\r\n            Assert(true);\r\n        });\r\n        b.trigger('anything');\r\n        Assert.equal(_.size((<any> a)._listeningTo), 0);\r\n    });\r\n\r\n    it('listenToOnce with event maps cleans up references', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        a.listenToOnce(b, {\r\n            one: function () {\r\n                Assert(true);\r\n            },\r\n            two: function () {\r\n                Assert(false);\r\n            }\r\n        });\r\n        b.trigger('one');\r\n        Assert.equal(_.size((<any> a)._listeningTo), 1);\r\n    });\r\n\r\n    it('listenToOnce with event maps binds the correct `this`', function () {\r\n        const a = new Events();\r\n        const b = new Events();\r\n        a.listenToOnce(b, {\r\n            one: function () {\r\n                Assert(this === a);\r\n            },\r\n            two: function () {\r\n                Assert(false);\r\n            }\r\n        });\r\n        b.trigger('one');\r\n    });\r\n\r\n    it('listenTo with empty callback does not throw an error', function () {\r\n        const e = new Events();\r\n        e.listenTo(e, 'foo', null);\r\n        e.trigger('foo');\r\n        Assert(true);\r\n    });\r\n\r\n    it('trigger all for each event', function () {\r\n        let a: boolean, b: boolean;\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n        obj.on('all', function (event) {\r\n            obj.counter++;\r\n            if (event === 'a') { a = true; }\r\n            if (event === 'b') { b = true; }\r\n        }).trigger('a b');\r\n        Assert(a);\r\n        Assert(b);\r\n        Assert.equal(obj.counter, 2);\r\n    });\r\n\r\n    it('on, then unbind all functions', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n        const callback = function () {\r\n            obj.counter += 1;\r\n        };\r\n\r\n        obj.on('event', callback);\r\n        obj.trigger('event');\r\n        obj.off('event');\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counter, 1, 'counter should have only been incremented once.');\r\n    });\r\n\r\n    it('bind two callbacks, unbind only one', function () {\r\n        const obj = new Events();\r\n        obj.counterA = 0;\r\n        obj.counterB = 0;\r\n        const callback = function () {\r\n            obj.counterA += 1;\r\n        };\r\n        obj.on('event', callback);\r\n        obj.on('event', function () {\r\n            obj.counterB += 1;\r\n        });\r\n        obj.trigger('event');\r\n        obj.off('event', callback);\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counterA, 1, 'counterA should have only been incremented once.');\r\n        Assert.equal(obj.counterB, 2, 'counterB should have been incremented twice.');\r\n    });\r\n\r\n    it('unbind a callback in the midst of it firing', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n        const callback = function () {\r\n            obj.counter += 1;\r\n            obj.off('event', callback);\r\n        };\r\n        obj.on('event', callback);\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counter, 1, 'the callback should have been unbound.');\r\n    });\r\n\r\n    it('two binds that unbind themeselves', function () {\r\n        const obj = new Events();\r\n        obj.counterA = 0;\r\n        obj.counterB = 0;\r\n        const incrA = function () {\r\n            obj.counterA += 1;\r\n            obj.off('event', incrA);\r\n        };\r\n        const incrB = function () {\r\n            obj.counterB += 1;\r\n            obj.off('event', incrB);\r\n        };\r\n        obj.on('event', incrA);\r\n        obj.on('event', incrB);\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counterA, 1, 'counterA should have only been incremented once.');\r\n        Assert.equal(obj.counterB, 1, 'counterB should have only been incremented once.');\r\n    });\r\n\r\n    it('bind a callback with a supplied context', function () {\r\n        class TestClass {\r\n            assertTrue() {\r\n                Assert(true, '`this` was bound to the callback');\r\n            }\r\n        }\r\n\r\n        const obj = new Events();\r\n        obj.on('event', function () {\r\n            this.assertTrue();\r\n        }, (new TestClass));\r\n        obj.trigger('event');\r\n    });\r\n\r\n    it('nested trigger with unbind', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n        const incr1 = function () {\r\n            obj.counter += 1;\r\n            obj.off('event', incr1);\r\n            obj.trigger('event');\r\n        };\r\n        const incr2 = function () {\r\n            obj.counter += 1;\r\n        };\r\n        obj.on('event', incr1);\r\n        obj.on('event', incr2);\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counter, 3, 'counter should have been incremented three times');\r\n    });\r\n\r\n    it('callback list is not altered during trigger', function () {\r\n        let counter = 0;\r\n        const obj = new Events();\r\n        const incr = function () {\r\n            counter++;\r\n        };\r\n        const incrOn = function () {\r\n            obj.on('event all', incr);\r\n        };\r\n        const incrOff = function () {\r\n            obj.off('event all', incr);\r\n        };\r\n\r\n        obj.on('event all', incrOn).trigger('event');\r\n        Assert.equal(counter, 0, 'on does not alter callback list');\r\n\r\n        obj.off().on('event', incrOff).on('event all', incr).trigger('event');\r\n        Assert.equal(counter, 2, 'off does not alter callback list');\r\n    });\r\n\r\n    it(\"#1282 - 'all' callback list is retrieved after each event.\", function () {\r\n        let counter = 0;\r\n        const obj = new Events();\r\n        const incr = function () {\r\n            counter++;\r\n        };\r\n\r\n        obj.on('x', function () {\r\n            obj.on('y', incr).on('all', incr);\r\n        }).trigger('x y');\r\n\r\n        Assert.strictEqual(counter, 2);\r\n    });\r\n\r\n    it('if no callback is provided, `on` is a noop', function () {\r\n        (<any> new Events()).on('test').trigger('test');\r\n    });\r\n\r\n    it('if callback is truthy but not a function, `on` should throw an error just like jQuery', function () {\r\n        const view = (<any> new Events()).on('test', 'noop');\r\n        Assert.throws(function () {\r\n            view.trigger('test');\r\n        });\r\n    });\r\n\r\n    it('remove all events for a specific context', function () {\r\n        const obj = new Events();\r\n        obj.on('x y all', function () {\r\n            Assert(true);\r\n        });\r\n        obj.on('x y all', function () {\r\n            Assert(false);\r\n        }, obj);\r\n        obj.off(null, null, obj);\r\n        obj.trigger('x y');\r\n    });\r\n\r\n    it('remove all events for a specific callback', function () {\r\n        const obj = new Events();\r\n        const success = function () {\r\n            Assert(true);\r\n        };\r\n        const fail = function () {\r\n            Assert(false);\r\n        };\r\n        obj.on('x y all', success);\r\n        obj.on('x y all', fail);\r\n        obj.off(null, fail);\r\n        obj.trigger('x y');\r\n    });\r\n\r\n    it('#1310 - off does not skip consecutive events', function () {\r\n        const obj = new Events();\r\n        obj.on('event', function () {\r\n            Assert(false);\r\n        }, obj);\r\n        obj.on('event', function () {\r\n            Assert(false);\r\n        }, obj);\r\n        obj.off(null, null, obj);\r\n        obj.trigger('event');\r\n    });\r\n\r\n    it('once', function () {\r\n        // Same as the previous test, but we use once rather than having to explicitly unbind\r\n        const obj = new Events();\r\n        obj.counterA = 0;\r\n        obj.counterB = 0;\r\n\r\n        const incrA = function () {\r\n            obj.counterA += 1;\r\n            obj.trigger('event');\r\n        };\r\n        const incrB = function () {\r\n            obj.counterB += 1;\r\n        };\r\n        obj.once('event', incrA);\r\n        obj.once('event', incrB);\r\n        obj.trigger('event');\r\n        Assert.equal(obj.counterA, 1, 'counterA should have only been incremented once.');\r\n        Assert.equal(obj.counterB, 1, 'counterB should have only been incremented once.');\r\n    });\r\n\r\n    it('once variant one', function () {\r\n        let count = 0;\r\n        const f = function () {\r\n            count += 1;\r\n        };\r\n\r\n        const a = (new Events()).once('event', f);\r\n        const b = (new Events()).on('event', f);\r\n\r\n        a.trigger('event');\r\n        b.trigger('event');\r\n        b.trigger('event');\r\n\r\n        Assert.equal(count, 3);\r\n    });\r\n\r\n    it('once variant two', function () {\r\n        let count = 0;\r\n        const obj = new Events();\r\n        const f = function () {\r\n            count += 1;\r\n        };\r\n\r\n        obj.once('event', f)\r\n           .on('event', f)\r\n           .trigger('event')\r\n           .trigger('event');\r\n\r\n        Assert.equal(count, 3);\r\n    });\r\n\r\n    it('once with off', function () {\r\n        const obj = new Events();\r\n        const f = function () {\r\n            Assert(false);\r\n        };\r\n\r\n        obj.once('event', f);\r\n        obj.off('event', f);\r\n        obj.trigger('event');\r\n    });\r\n\r\n    it('once with event maps', function () {\r\n        const obj = new Events();\r\n        obj.counter = 0;\r\n\r\n        const increment = function () {\r\n            this.counter += 1;\r\n        };\r\n\r\n        obj.once({\r\n            a: increment,\r\n            b: increment,\r\n            c: increment\r\n        }, obj);\r\n\r\n        obj.trigger('a');\r\n        Assert.equal(obj.counter, 1);\r\n\r\n        obj.trigger('a b');\r\n        Assert.equal(obj.counter, 2);\r\n\r\n        obj.trigger('c');\r\n        Assert.equal(obj.counter, 3);\r\n\r\n        obj.trigger('a b c');\r\n        Assert.equal(obj.counter, 3);\r\n    });\r\n\r\n    it('once with off only by context', function () {\r\n        const context = {};\r\n        const obj = new Events();\r\n        obj.once('event', function () {\r\n            Assert(false);\r\n        }, context);\r\n        obj.off(null, null, context);\r\n        obj.trigger('event');\r\n    });\r\n\r\n    it('once with asynchronous events', function (done) {\r\n        const func = _.debounce(function () {\r\n            Assert(true);\r\n            done();\r\n        }, 50);\r\n\r\n        const obj = (new Events()).once('async', func);\r\n        obj.trigger('async');\r\n        obj.trigger('async');\r\n    });\r\n\r\n    it('once with multiple events.', function () {\r\n        let count = 0;\r\n        const obj = new Events();\r\n        obj.once('x y', function () {\r\n            count += 1;\r\n        });\r\n        obj.trigger('x y');\r\n        Assert.equal(count, 2);\r\n    });\r\n\r\n    it('Off during iteration with once.', function () {\r\n        let count = 0;\r\n        const obj = new Events();\r\n        const f = function () {\r\n            this.off('event', f);\r\n        };\r\n        obj.on('event', f);\r\n        obj.once('event', function () {});\r\n        obj.on('event', function () {\r\n            count += 1;\r\n        });\r\n\r\n        obj.trigger('event');\r\n        obj.trigger('event');\r\n        Assert.equal(count, 2);\r\n    });\r\n\r\n    it('`once` on `all` should work as expected', function () {\r\n        let count = 0;\r\n        const obj = new Events();\r\n        obj.once('all', function () {\r\n            count += 1;\r\n            obj.trigger('all');\r\n        });\r\n        obj.trigger('all');\r\n\r\n        Assert.equal(count, 1);\r\n    });\r\n\r\n    it('once without a callback is a noop', function () {\r\n        (<any> new Events()).once('event').trigger('event');\r\n    });\r\n\r\n    it('listenToOnce without a callback is a noop', function () {\r\n        const obj = new Events();\r\n        (<any> obj).listenToOnce(obj, 'event').trigger('event');\r\n    });\r\n\r\n    it('event functions are chainable', function () {\r\n        const obj = new Events();\r\n        const obj2 = new Events();\r\n        const fn = function () {};\r\n\r\n        Assert.equal(obj, obj.trigger('noeventssetyet'));\r\n        Assert.equal(obj, obj.off('noeventssetyet'));\r\n        Assert.equal(obj, obj.stopListening(null, 'noeventssetyet'));\r\n        Assert.equal(obj, obj.on('a', fn));\r\n        Assert.equal(obj, obj.once('c', fn));\r\n        Assert.equal(obj, obj.trigger('a'));\r\n        Assert.equal(obj, obj.listenTo(obj2, 'a', fn));\r\n        Assert.equal(obj, obj.listenToOnce(obj2, 'b', fn));\r\n        Assert.equal(obj, obj.off('a c'));\r\n        Assert.equal(obj, obj.stopListening(obj2, 'a'));\r\n        Assert.equal(obj, obj.stopListening());\r\n    });\r\n\r\n    it('#3448 - listenToOnce with space-separated events', function () {\r\n        const one = new Events();\r\n        const two = new Events();\r\n        let count = 1;\r\n        one.listenToOnce(two, 'x y', function (n) {\r\n            Assert(n === count++);\r\n        });\r\n        two.trigger('x', 1);\r\n        two.trigger('x', 1);\r\n        two.trigger('y', 2);\r\n        two.trigger('y', 2);\r\n    });\r\n});\r\n\r\ndescribe('Events (customized)', function () {\r\n    it('accepts event objects', function() {\r\n        let count = 0;\r\n        const events = new Events();\r\n        const event = new Event('myEvent');\r\n        events.on('myEvent', function(e) {\r\n            Assert(e instanceof Event);\r\n            count += 1;\r\n        });\r\n        events.trigger(event);\r\n        Assert.equal(count, 1);\r\n    });\r\n\r\n    it('stops propagation', function() {\r\n        let count = 0;\r\n        const events = new Events();\r\n        const event = new Event('myEvent');\r\n        events.on('myEvent', function(e) { count++; e.stopPropagation(); });\r\n        events.on('myEvent', function(e) { count++; Assert(false); });\r\n        events.trigger(event);\r\n        Assert.equal(count, 1);\r\n    });\r\n\r\n    it('sorts handlers by priority', function() {\r\n        let count = 0;\r\n        const events = new Events();\r\n        events.on('myEvent', function(e) { Assert.equal(count, 1); count++; }, void 0, 0);\r\n        events.on('myEvent', function(e) { Assert.equal(count, 0); count++; }, void 0, 100);\r\n        events.trigger('myEvent');\r\n        Assert.equal(count, 2);\r\n    });\r\n});\r\n"]}