{"version":3,"file":"typedoc.js","sourceRoot":"","sources":["../../src/test/typedoc.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application } from '..';\r\nimport * as Path from 'path';\r\nimport Assert = require('assert');\r\n\r\ndescribe('TypeDoc', function() {\r\n    let application: Application;\r\n\r\n    describe('Application', function() {\r\n        it('constructs', function() {\r\n            application = new Application();\r\n        });\r\n        it('expands input directory', function() {\r\n            const inputFiles = Path.join(__dirname, 'converter', 'class');\r\n            const expanded = application.expandInputFiles([inputFiles]);\r\n\r\n            Assert.notEqual(expanded.indexOf(Path.join(inputFiles, 'class.ts')), -1);\r\n            Assert.equal(expanded.indexOf(inputFiles), -1);\r\n        });\r\n        it('expands input files', function() {\r\n            const inputFiles = Path.join(__dirname, 'converter', 'class', 'class.ts');\r\n            const expanded = application.expandInputFiles([inputFiles]);\r\n\r\n            Assert.notEqual(expanded.indexOf(inputFiles), -1);\r\n        });\r\n        it('honors the exclude argument even on a fixed directory list', function() {\r\n            const inputFiles = Path.join(__dirname, 'converter', 'class');\r\n            application.options.setValue('exclude', '**/class.ts');\r\n            const expanded = application.expandInputFiles([inputFiles]);\r\n\r\n            Assert.equal(expanded.indexOf(Path.join(inputFiles, 'class.ts')), -1);\r\n            Assert.equal(expanded.indexOf(inputFiles), -1);\r\n        });\r\n        it('honors the exclude argument even on a fixed file list', function() {\r\n            const inputFiles = Path.join(__dirname, 'converter', 'class', 'class.ts');\r\n            application.options.setValue('exclude', '**/class.ts');\r\n            const expanded = application.expandInputFiles([inputFiles]);\r\n\r\n            Assert.equal(expanded.indexOf(inputFiles), -1);\r\n        });\r\n        it('supports multiple excludes', function() {\r\n            const inputFiles = Path.join(__dirname, 'converter');\r\n            application.options.setValue('exclude', '**/+(class|access).ts');\r\n            const expanded = application.expandInputFiles([inputFiles]);\r\n\r\n            Assert.equal(expanded.indexOf(Path.join(inputFiles, 'class', 'class.ts')), -1);\r\n            Assert.equal(expanded.indexOf(Path.join(inputFiles, 'access', 'access.ts')), -1);\r\n            Assert.equal(expanded.indexOf(inputFiles), -1);\r\n        });\r\n    });\r\n});\r\n"]}