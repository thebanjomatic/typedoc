{"version":3,"file":"JavascriptIndexPlugin.js","sourceRoot":"","sources":["../../../../src/lib/output/plugins/JavascriptIndexPlugin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,2BAA6B;AAE7B,wDAA0F;AAC1F,mEAAkE;AAClE,4CAA6D;AAC7D,qCAA2C;AAC3C,oCAA0C;AAQ1C;IAA2C,yCAAiB;IAA5D;;IA8DA,CAAC;IA1DG,0CAAU,GAAV;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,sBAAa,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACzE,CAAC;IAOO,+CAAe,GAAvB,UAAwB,KAAoB;QACxC,IAAM,IAAI,GAAU,EAAE,CAAC;QACvB,IAAM,KAAK,GAAG,EAAE,CAAC;QAEjB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;YACxC,IAAM,UAAU,GAAkD,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACjG,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,YAAY,6BAAqB,CAAC,CAAC,CAAC,CAAC;gBACjD,QAAQ,CAAC;YACb,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG;gBACf,CAAC,UAAU,CAAC,IAAI;gBAChB,UAAU,CAAC,KAAK,CAAC,UAAU;gBAC3B,UAAU,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC;gBACzB,QAAQ,CAAC;YACb,CAAC;YAED,IAAI,QAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAC/B,EAAE,CAAC,CAAC,QAAM,YAAY,yBAAiB,CAAC,CAAC,CAAC;gBACtC,QAAM,GAAG,IAAI,CAAC;YAClB,CAAC;YAED,IAAM,GAAG,GAAQ;gBACb,EAAE,EAAE,IAAI,CAAC,MAAM;gBACf,IAAI,EAAK,UAAU,CAAC,IAAI;gBACxB,IAAI,EAAK,UAAU,CAAC,IAAI;gBACxB,GAAG,EAAM,UAAU,CAAC,GAAG;gBACvB,OAAO,EAAE,UAAU,CAAC,UAAU;aACjC,CAAC;YAEF,EAAE,CAAC,CAAC,QAAM,CAAC,CAAC,CAAC;gBACT,GAAG,CAAC,MAAM,GAAG,QAAM,CAAC,WAAW,EAAE,CAAC;YACtC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,yBAAW,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1E,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QAC/E,IAAM,IAAI,GACN,yHAEwB,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,MAAG,CAAC;QAE1E,cAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IA7DQ,qBAAqB;QADjC,sBAAS,CAAC,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC;OACzB,qBAAqB,CA8DjC;IAAD,4BAAC;CAAA,AA9DD,CAA2C,8BAAiB,GA8D3D;AA9DY,sDAAqB","sourcesContent":["import * as Path from 'path';\r\n\r\nimport { DeclarationReflection, ProjectReflection } from '../../models/reflections/index';\r\nimport { GroupPlugin } from '../../converter/plugins/GroupPlugin';\r\nimport { Component, RendererComponent } from '../components';\r\nimport { writeFile } from '../../utils/fs';\r\nimport { RendererEvent } from '../events';\r\n\r\n/**\r\n * A plugin that exports an index of the project to a javascript file.\r\n *\r\n * The resulting javascript file can be used to build a simple search function.\r\n */\r\n@Component({name: 'javascript-index'})\r\nexport class JavascriptIndexPlugin extends RendererComponent {\r\n    /**\r\n     * Create a new JavascriptIndexPlugin instance.\r\n     */\r\n    initialize() {\r\n        this.listenTo(this.owner, RendererEvent.BEGIN, this.onRendererBegin);\r\n    }\r\n\r\n    /**\r\n     * Triggered after a document has been rendered, just before it is written to disc.\r\n     *\r\n     * @param event  An event object describing the current render operation.\r\n     */\r\n    private onRendererBegin(event: RendererEvent) {\r\n        const rows: any[] = [];\r\n        const kinds = {};\r\n\r\n        for (let key in event.project.reflections) {\r\n            const reflection: DeclarationReflection = <DeclarationReflection> event.project.reflections[key];\r\n            if (!(reflection instanceof DeclarationReflection)) {\r\n                continue;\r\n            }\r\n\r\n            if (!reflection.url ||\r\n                !reflection.name ||\r\n                reflection.flags.isExternal ||\r\n                reflection.name === '') {\r\n                continue;\r\n            }\r\n\r\n            let parent = reflection.parent;\r\n            if (parent instanceof ProjectReflection) {\r\n                parent = null;\r\n            }\r\n\r\n            const row: any = {\r\n                id: rows.length,\r\n                kind:    reflection.kind,\r\n                name:    reflection.name,\r\n                url:     reflection.url,\r\n                classes: reflection.cssClasses\r\n            };\r\n\r\n            if (parent) {\r\n                row.parent = parent.getFullName();\r\n            }\r\n\r\n            if (!kinds[reflection.kind]) {\r\n                kinds[reflection.kind] = GroupPlugin.getKindSingular(reflection.kind);\r\n            }\r\n\r\n            rows.push(row);\r\n        }\r\n\r\n        const fileName = Path.join(event.outputDirectory, 'assets', 'js', 'search.js');\r\n        const data =\r\n            `var typedoc = typedoc || {};\r\n            typedoc.search = typedoc.search || {};\r\n            typedoc.search.data = ${JSON.stringify({kinds: kinds, rows: rows})};`;\r\n\r\n        writeFile(fileName, data, true);\r\n    }\r\n}\r\n"]}