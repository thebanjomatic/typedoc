{"version":3,"file":"DefaultTheme.js","sourceRoot":"","sources":["../../../../src/lib/output/themes/DefaultTheme.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Path from 'path';\r\nimport * as FS from 'fs';\r\n\r\nimport { Theme } from '../theme';\r\nimport { Renderer } from '../renderer';\r\nimport { Reflection, ReflectionKind, ProjectReflection, ContainerReflection, DeclarationReflection } from '../../models/reflections/index';\r\nimport { ReflectionGroup } from '../../models/ReflectionGroup';\r\nimport { UrlMapping } from '../models/UrlMapping';\r\nimport { NavigationItem } from '../models/NavigationItem';\r\nimport { RendererEvent } from '../events';\r\n\r\n/**\r\n * Defines a mapping of a [[Models.Kind]] to a template file.\r\n *\r\n * Used by [[DefaultTheme]] to map reflections to output files.\r\n */\r\nexport interface TemplateMapping {\r\n    /**\r\n     * [[DeclarationReflection.kind]] this rule applies to.\r\n     */\r\n    kind: ReflectionKind[];\r\n\r\n    /**\r\n     * Can this mapping have children or should all further reflections be rendered\r\n     * to the defined output page?\r\n     */\r\n    isLeaf: boolean;\r\n\r\n    /**\r\n     * The name of the directory the output files should be written to.\r\n     */\r\n    directory: string;\r\n\r\n    /**\r\n     * The name of the template that should be used to render the reflection.\r\n     */\r\n    template: string;\r\n}\r\n\r\n/**\r\n * Default theme implementation of TypeDoc. If a theme does not provide a custom\r\n * [[BaseTheme]] implementation, this theme class will be used.\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    /**\r\n     * Mappings of reflections kinds to templates used by this theme.\r\n     */\r\n    static MAPPINGS: TemplateMapping[] = [{\r\n        kind:      [ReflectionKind.Class],\r\n        isLeaf:    false,\r\n        directory: 'classes',\r\n        template:  'reflection.hbs'\r\n    }, {\r\n        kind:      [ReflectionKind.Interface],\r\n        isLeaf:    false,\r\n        directory: 'interfaces',\r\n        template:  'reflection.hbs'\r\n    }, {\r\n        kind:      [ReflectionKind.Enum],\r\n        isLeaf:    false,\r\n        directory: 'enums',\r\n        template:  'reflection.hbs'\r\n    }, {\r\n        kind:      [ReflectionKind.Module, ReflectionKind.ExternalModule],\r\n        isLeaf:    false,\r\n        directory: 'modules',\r\n        template:  'reflection.hbs'\r\n    }];\r\n\r\n    static URL_PREFIX: RegExp = /^(http|ftp)s?:\\/\\//;\r\n\r\n    /**\r\n     * Create a new DefaultTheme instance.\r\n     *\r\n     * @param renderer  The renderer this theme is attached to.\r\n     * @param basePath  The base path of this theme.\r\n     */\r\n    constructor(renderer: Renderer, basePath: string) {\r\n        super(renderer, basePath);\r\n        this.listenTo(renderer, RendererEvent.BEGIN, this.onRendererBegin, 1024);\r\n    }\r\n\r\n    /**\r\n     * Test whether the given path contains a documentation generated by this theme.\r\n     *\r\n     * @param path  The path of the directory that should be tested.\r\n     * @returns     TRUE if the given path seems to be a previous output directory,\r\n     *              otherwise FALSE.\r\n     */\r\n    isOutputDirectory(path: string): boolean {\r\n        if (!FS.existsSync(Path.join(path, 'index.html'))) {\r\n            return false;\r\n        }\r\n        if (!FS.existsSync(Path.join(path, 'assets'))) {\r\n            return false;\r\n        }\r\n        if (!FS.existsSync(Path.join(path, 'assets', 'js', 'main.js'))) {\r\n            return false;\r\n        }\r\n        if (!FS.existsSync(Path.join(path, 'assets', 'images', 'icons.png'))) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Map the models of the given project to the desired output files.\r\n     *\r\n     * @param project  The project whose urls should be generated.\r\n     * @returns        A list of [[UrlMapping]] instances defining which models\r\n     *                 should be rendered to which files.\r\n     */\r\n    getUrls(project: ProjectReflection): UrlMapping[] {\r\n        const urls: UrlMapping[] = [];\r\n        const entryPoint = this.getEntryPoint(project);\r\n\r\n        if (this.application.options.getValue('readme') === 'none') {\r\n            entryPoint.url = 'index.html';\r\n            urls.push(new UrlMapping('index.html', entryPoint, 'reflection.hbs'));\r\n        } else {\r\n            entryPoint.url = 'globals.html';\r\n            urls.push(new UrlMapping('globals.html', entryPoint, 'reflection.hbs'));\r\n            urls.push(new UrlMapping('index.html',   project, 'index.hbs'));\r\n        }\r\n\r\n        if (entryPoint.children) {\r\n            entryPoint.children.forEach((child: Reflection) => {\r\n                if (child instanceof DeclarationReflection) {\r\n                    DefaultTheme.buildUrls(child, urls);\r\n                }\r\n            });\r\n        }\r\n\r\n        return urls;\r\n    }\r\n\r\n    /**\r\n     * Return the entry point of the documentation.\r\n     *\r\n     * @param project  The current project.\r\n     * @returns The reflection that should be used as the entry point.\r\n     */\r\n    getEntryPoint(project: ProjectReflection): ContainerReflection {\r\n        const entryPoint = this.owner.entryPoint;\r\n        if (entryPoint) {\r\n            const reflection = project.getChildByName(entryPoint);\r\n            if (reflection) {\r\n                if (reflection instanceof ContainerReflection) {\r\n                    return reflection;\r\n                } else {\r\n                    this.application.logger.warn('The given entry point `%s` is not a container.', entryPoint);\r\n                }\r\n            } else {\r\n                this.application.logger.warn('The entry point `%s` could not be found.', entryPoint);\r\n            }\r\n        }\r\n\r\n        return project;\r\n    }\r\n\r\n    /**\r\n     * Create a navigation structure for the given project.\r\n     *\r\n     * @param project  The project whose navigation should be generated.\r\n     * @returns        The root navigation item.\r\n     */\r\n    getNavigation(project: ProjectReflection): NavigationItem {\r\n        /**\r\n         * Test whether the given list of modules contains an external module.\r\n         *\r\n         * @param modules  The list of modules to test.\r\n         * @returns        TRUE if any of the modules is marked as being external.\r\n         */\r\n        function containsExternals(modules: DeclarationReflection[]): boolean {\r\n            for (let index = 0, length = modules.length; index < length; index++) {\r\n                if (modules[index].flags.isExternal) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * Sort the given list of modules by name, groups external modules at the bottom.\r\n         *\r\n         * @param modules  The list of modules that should be sorted.\r\n         */\r\n        function sortReflections(modules: DeclarationReflection[]) {\r\n            modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\r\n                if (a.flags.isExternal && !b.flags.isExternal) {\r\n                    return  1;\r\n                }\r\n                if (!a.flags.isExternal && b.flags.isExternal) {\r\n                    return -1;\r\n                }\r\n                return a.getFullName() < b.getFullName() ? -1 : 1;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Find the urls of all children of the given reflection and store them as dedicated urls\r\n         * of the given NavigationItem.\r\n         *\r\n         * @param reflection  The reflection whose children urls should be included.\r\n         * @param item        The navigation node whose dedicated urls should be set.\r\n         */\r\n        function includeDedicatedUrls(reflection: DeclarationReflection, item: NavigationItem) {\r\n            (function walk(reflection: DeclarationReflection) {\r\n                for (let key in reflection.children) {\r\n                    const child = reflection.children[key];\r\n                    if (child.hasOwnDocument && !child.kindOf(ReflectionKind.SomeModule)) {\r\n                        if (!item.dedicatedUrls) {\r\n                            item.dedicatedUrls = [];\r\n                        }\r\n                        item.dedicatedUrls.push(child.url);\r\n                        walk(child);\r\n                    }\r\n                }\r\n            })(reflection);\r\n        }\r\n\r\n        /**\r\n         * Create navigation nodes for all container children of the given reflection.\r\n         *\r\n         * @param reflection  The reflection whose children modules should be transformed into navigation nodes.\r\n         * @param parent      The parent NavigationItem of the newly created nodes.\r\n         */\r\n        function buildChildren(reflection: DeclarationReflection, parent: NavigationItem) {\r\n            const modules = reflection.getChildrenByKind(ReflectionKind.SomeModule);\r\n            modules.sort((a: DeclarationReflection, b: DeclarationReflection) => {\r\n                return a.getFullName() < b.getFullName() ? -1 : 1;\r\n            });\r\n\r\n            modules.forEach((reflection) => {\r\n                const item = NavigationItem.create(reflection, parent);\r\n                includeDedicatedUrls(reflection, item);\r\n                buildChildren(reflection, item);\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Create navigation nodes for the given list of reflections. The resulting nodes will be grouped into\r\n         * an \"internal\" and an \"external\" section when applicable.\r\n         *\r\n         * @param reflections  The list of reflections which should be transformed into navigation nodes.\r\n         * @param parent       The parent NavigationItem of the newly created nodes.\r\n         * @param callback     Optional callback invoked for each generated node.\r\n         */\r\n        function buildGroups(reflections: DeclarationReflection[], parent: NavigationItem,\r\n                             callback?: (reflection: DeclarationReflection, item: NavigationItem) => void) {\r\n            let state = -1;\r\n            const hasExternals = containsExternals(reflections);\r\n            sortReflections(reflections);\r\n\r\n            reflections.forEach((reflection) => {\r\n                if (hasExternals && !reflection.flags.isExternal && state !== 1) {\r\n                    new NavigationItem('Internals', null, parent, 'tsd-is-external');\r\n                    state = 1;\r\n                } else if (hasExternals && reflection.flags.isExternal && state !== 2) {\r\n                    new NavigationItem('Externals', null, parent, 'tsd-is-external');\r\n                    state = 2;\r\n                }\r\n\r\n                const item = NavigationItem.create(reflection, parent);\r\n                includeDedicatedUrls(reflection, item);\r\n                if (callback) {\r\n                    callback(reflection, item);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Build the navigation structure.\r\n         *\r\n         * @param hasSeparateGlobals  Has the project a separated globals.html file?\r\n         * @return                    The root node of the generated navigation structure.\r\n         */\r\n        function build(hasSeparateGlobals: boolean): NavigationItem {\r\n            const root = new NavigationItem('Index', 'index.html');\r\n\r\n            if (entryPoint === project) {\r\n                const globals = new NavigationItem('Globals', hasSeparateGlobals ? 'globals.html' : 'index.html', root);\r\n                globals.isGlobals = true;\r\n            }\r\n\r\n            const modules: DeclarationReflection[] = [];\r\n            project.getReflectionsByKind(ReflectionKind.SomeModule).forEach((someModule) => {\r\n                let target = someModule.parent;\r\n                let inScope = (someModule === entryPoint);\r\n                while (target) {\r\n                    if (target.kindOf(ReflectionKind.ExternalModule)) {\r\n                        return;\r\n                    }\r\n                    if (entryPoint === target) {\r\n                        inScope = true;\r\n                    }\r\n                    target = target.parent;\r\n                }\r\n\r\n                if (inScope && someModule instanceof DeclarationReflection) {\r\n                    modules.push(someModule);\r\n                }\r\n            });\r\n\r\n            if (modules.length < 10) {\r\n                buildGroups(modules, root);\r\n            } else {\r\n                buildGroups(entryPoint.getChildrenByKind(ReflectionKind.SomeModule), root, buildChildren);\r\n            }\r\n\r\n            return root;\r\n        }\r\n\r\n        const entryPoint = this.getEntryPoint(project);\r\n        return build(this.application.options.getValue('readme') !== 'none');\r\n    }\r\n\r\n    /**\r\n     * Triggered before the renderer starts rendering a project.\r\n     *\r\n     * @param event  An event object describing the current render operation.\r\n     */\r\n    private onRendererBegin(event: RendererEvent) {\r\n        if (event.project.groups) {\r\n            event.project.groups.forEach(DefaultTheme.applyGroupClasses);\r\n        }\r\n\r\n        for (let id in event.project.reflections) {\r\n            const reflection = event.project.reflections[id];\r\n            if (reflection instanceof DeclarationReflection) {\r\n                DefaultTheme.applyReflectionClasses(<DeclarationReflection> reflection);\r\n            }\r\n\r\n            if (reflection instanceof ContainerReflection && reflection['groups']) {\r\n                reflection['groups'].forEach(DefaultTheme.applyGroupClasses);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return a url for the given reflection.\r\n     *\r\n     * @param reflection  The reflection the url should be generated for.\r\n     * @param relative    The parent reflection the url generation should stop on.\r\n     * @param separator   The separator used to generate the url.\r\n     * @returns           The generated url.\r\n     */\r\n    static getUrl(reflection: Reflection, relative?: Reflection, separator: string = '.'): string {\r\n        let url = reflection.getAlias();\r\n\r\n        if (reflection.parent && reflection.parent !== relative &&\r\n            !(reflection.parent instanceof ProjectReflection)) {\r\n            url = DefaultTheme.getUrl(reflection.parent, relative, separator) + separator + url;\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Return the template mapping fore the given reflection.\r\n     *\r\n     * @param reflection  The reflection whose mapping should be resolved.\r\n     * @returns           The found mapping or NULL if no mapping could be found.\r\n     */\r\n    static getMapping(reflection: DeclarationReflection): TemplateMapping {\r\n        for (let i = 0, c = DefaultTheme.MAPPINGS.length; i < c; i++) {\r\n            const mapping = DefaultTheme.MAPPINGS[i];\r\n            if (reflection.kindOf(mapping.kind)) {\r\n                return mapping;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Build the url for the the given reflection and all of its children.\r\n     *\r\n     * @param reflection  The reflection the url should be created for.\r\n     * @param urls        The array the url should be appended to.\r\n     * @returns           The altered urls array.\r\n     */\r\n    static buildUrls(reflection: DeclarationReflection, urls: UrlMapping[]): UrlMapping[] {\r\n        const mapping = DefaultTheme.getMapping(reflection);\r\n        if (mapping) {\r\n            if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\r\n                const url = [mapping.directory, DefaultTheme.getUrl(reflection) + '.html'].join('/');\r\n                urls.push(new UrlMapping(url, reflection, mapping.template));\r\n\r\n                reflection.url = url;\r\n                reflection.hasOwnDocument = true;\r\n            }\r\n\r\n            for (let key in reflection.children) {\r\n                const child = reflection.children[key];\r\n                if (mapping.isLeaf) {\r\n                    DefaultTheme.applyAnchorUrl(child, reflection);\r\n                } else {\r\n                    DefaultTheme.buildUrls(child, urls);\r\n                }\r\n            }\r\n        } else {\r\n            DefaultTheme.applyAnchorUrl(reflection, reflection.parent);\r\n        }\r\n\r\n        return urls;\r\n    }\r\n\r\n    /**\r\n     * Generate an anchor url for the given reflection and all of its children.\r\n     *\r\n     * @param reflection  The reflection an anchor url should be created for.\r\n     * @param container   The nearest reflection having an own document.\r\n     */\r\n    static applyAnchorUrl(reflection: Reflection, container: Reflection) {\r\n        if (!reflection.url || !DefaultTheme.URL_PREFIX.test(reflection.url)) {\r\n            let anchor = DefaultTheme.getUrl(reflection, container, '.');\r\n            if (reflection['isStatic']) {\r\n                anchor = 'static-' + anchor;\r\n            }\r\n\r\n            reflection.url = container.url + '#' + anchor;\r\n            reflection.anchor = anchor;\r\n            reflection.hasOwnDocument = false;\r\n        }\r\n\r\n        reflection.traverse((child) => {\r\n            if (child instanceof DeclarationReflection) {\r\n                DefaultTheme.applyAnchorUrl(child, container);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generate the css classes for the given reflection and apply them to the\r\n     * [[DeclarationReflection.cssClasses]] property.\r\n     *\r\n     * @param reflection  The reflection whose cssClasses property should be generated.\r\n     */\r\n    static applyReflectionClasses(reflection: DeclarationReflection) {\r\n        const classes: string[] = [];\r\n        let kind: string;\r\n\r\n        if (reflection.kind === ReflectionKind.Accessor) {\r\n            if (!reflection.getSignature) {\r\n                classes.push('tsd-kind-set-signature');\r\n            } else if (!reflection.setSignature) {\r\n                classes.push('tsd-kind-get-signature');\r\n            } else {\r\n                classes.push('tsd-kind-accessor');\r\n            }\r\n        } else {\r\n            kind = ReflectionKind[reflection.kind];\r\n            classes.push(DefaultTheme.toStyleClass('tsd-kind-' + kind));\r\n        }\r\n\r\n        if (reflection.parent && reflection.parent instanceof DeclarationReflection) {\r\n            kind = ReflectionKind[reflection.parent.kind];\r\n            classes.push(DefaultTheme.toStyleClass(`tsd-parent-kind-${kind}`));\r\n        }\r\n\r\n        let hasTypeParameters = !!reflection.typeParameters;\r\n        reflection.getAllSignatures().forEach((signature) => {\r\n            hasTypeParameters = hasTypeParameters || !!signature.typeParameters;\r\n        });\r\n\r\n        if (hasTypeParameters)            { classes.push('tsd-has-type-parameter'); }\r\n        if (reflection.overwrites)        { classes.push('tsd-is-overwrite'); }\r\n        if (reflection.inheritedFrom)     { classes.push('tsd-is-inherited'); }\r\n        if (reflection.flags.isPrivate)   { classes.push('tsd-is-private'); }\r\n        if (reflection.flags.isProtected) { classes.push('tsd-is-protected'); }\r\n        if (reflection.flags.isStatic)    { classes.push('tsd-is-static'); }\r\n        if (reflection.flags.isExternal)  { classes.push('tsd-is-external'); }\r\n        if (!reflection.flags.isExported) { classes.push('tsd-is-not-exported'); }\r\n\r\n        reflection.cssClasses = classes.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Generate the css classes for the given reflection group and apply them to the\r\n     * [[ReflectionGroup.cssClasses]] property.\r\n     *\r\n     * @param group  The reflection group whose cssClasses property should be generated.\r\n     */\r\n    static applyGroupClasses(group: ReflectionGroup) {\r\n        const classes: string[] = [];\r\n        if (group.allChildrenAreInherited)  { classes.push('tsd-is-inherited'); }\r\n        if (group.allChildrenArePrivate)    { classes.push('tsd-is-private'); }\r\n        if (group.allChildrenAreProtectedOrPrivate) { classes.push('tsd-is-private-protected'); }\r\n        if (group.allChildrenAreExternal)   { classes.push('tsd-is-external'); }\r\n        if (!group.someChildrenAreExported) { classes.push('tsd-is-not-exported'); }\r\n\r\n        group.cssClasses = classes.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Transform a space separated string into a string suitable to be used as a\r\n     * css class, e.g. \"constructor method\" > \"Constructor-method\".\r\n     */\r\n    static toStyleClass(str: string) {\r\n        return str.replace(/(\\w)([A-Z])/g, (m, m1, m2) => m1 + '-' + m2).toLowerCase();\r\n    }\r\n}\r\n"]}