{"version":3,"file":"components.js","sourceRoot":"","sources":["../../../src/lib/output/components.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2BAA6B;AAE7B,gDAAkE;AAK1D,oBALC,qBAAS,CAKD;AAJjB,qDAAuF;AAEvF,mCAAoD;AAIpD;IAAgD,qCAA2B;IAA3E;;IAA8E,CAAC;IAAD,wBAAC;AAAD,CAAC,AAA/E,CAAgD,6BAAiB,GAAc;AAAzD,8CAAiB;AAKvC;IAA4D,iDAAiB;IAA7E;QAAA,qEAkEC;QA/Ca,eAAS,GAAW,oBAAoB,CAAC;;IA+CvD,CAAC;IAxCa,kDAAU,GAApB;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;YACpB,GAAC,sBAAa,CAAC,KAAK,IAAG,IAAI,CAAC,eAAe;YAC3C,GAAC,kBAAS,CAAC,KAAK,IAAO,IAAI,CAAC,WAAW;gBACzC,CAAC;;IACP,CAAC;IAQM,sDAAc,GAArB,UAAsB,QAAgB;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC5E,CAAC;IACL,CAAC;IAOS,uDAAe,GAAzB,UAA0B,KAAoB;QAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IACjC,CAAC;IAOS,mDAAW,GAArB,UAAsB,IAAe;QACjC,IAAI,CAAC,QAAQ,GAAK,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,YAAY,6BAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACtF,CAAC;IACL,oCAAC;AAAD,CAAC,AAlED,CAA4D,iBAAiB,GAkE5E;AAlEqB,sEAA6B","sourcesContent":["import * as Path from 'path';\r\n\r\nimport { Component, AbstractComponent } from '../utils/component';\r\nimport { ProjectReflection, DeclarationReflection } from '../models/reflections/index';\r\nimport { Renderer } from './renderer';\r\nimport { RendererEvent, PageEvent } from './events';\r\n\r\nexport {Component};\r\n\r\nexport abstract class RendererComponent extends AbstractComponent<Renderer> { }\r\n\r\n/**\r\n * A plugin for the renderer that reads the current render context.\r\n */\r\nexport abstract class ContextAwareRendererComponent extends RendererComponent {\r\n    /**\r\n     * The project that is currently processed.\r\n     */\r\n    protected project: ProjectReflection;\r\n\r\n    /**\r\n     * The reflection that is currently processed.\r\n     */\r\n    protected reflection: DeclarationReflection;\r\n\r\n    /**\r\n     * The url of the document that is being currently generated.\r\n     */\r\n    private location: string;\r\n\r\n    /**\r\n     * Regular expression to test if a string looks like an external url.\r\n     */\r\n    protected urlPrefix: RegExp = /^(http|ftp)s?:\\/\\//;\r\n\r\n    /**\r\n     * Create a new ContextAwareRendererPlugin instance.\r\n     *\r\n     * @param renderer  The renderer this plugin should be attached to.\r\n     */\r\n    protected initialize() {\r\n        this.listenTo(this.owner, {\r\n            [RendererEvent.BEGIN]: this.onBeginRenderer,\r\n            [PageEvent.BEGIN]:     this.onBeginPage\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Transform the given absolute path into a relative path.\r\n     *\r\n     * @param absolute  The absolute path to transform.\r\n     * @returns A path relative to the document currently processed.\r\n     */\r\n    public getRelativeUrl(absolute: string): string {\r\n        if (this.urlPrefix.test(absolute)) {\r\n            return absolute;\r\n        } else {\r\n            const relative = Path.relative(Path.dirname(this.location), Path.dirname(absolute));\r\n            return Path.join(relative, Path.basename(absolute)).replace(/\\\\/g, '/');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Triggered before the renderer starts rendering a project.\r\n     *\r\n     * @param event  An event object describing the current render operation.\r\n     */\r\n    protected onBeginRenderer(event: RendererEvent) {\r\n        this.project = event.project;\r\n    }\r\n\r\n    /**\r\n     * Triggered before a document will be rendered.\r\n     *\r\n     * @param page  An event object describing the current render operation.\r\n     */\r\n    protected onBeginPage(page: PageEvent) {\r\n        this.location   = page.url;\r\n        this.reflection = page.model instanceof DeclarationReflection ? page.model : null;\r\n    }\r\n}\r\n"]}