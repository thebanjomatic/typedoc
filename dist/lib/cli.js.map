{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/lib/cli.ts"],"names":[],"mappings":"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","sourcesContent":["import * as typescript from 'typescript';\r\n\r\nimport { Application } from './application';\r\nimport { Option } from './utils/component';\r\nimport { OptionsReadResult } from './utils/options/options';\r\nimport { ParameterHint, ParameterType } from './utils/options/declaration';\r\nimport { getOptionsHelp } from './utils/options/help';\r\n\r\nexport const enum ExitCode {\r\n    OptionError  = 1,\r\n    NoInputFiles = 2,\r\n    NoOutput     = 3,\r\n    CompileError = 4,\r\n    OutputError  = 5\r\n}\r\n\r\nexport class CliApplication extends Application {\r\n    @Option({\r\n        name:  'out',\r\n        help:  'Specifies the location the documentation should be written to.',\r\n        hint:  ParameterHint.Directory\r\n    })\r\n    out: string;\r\n\r\n    @Option({\r\n        name:  'json',\r\n        help:  'Specifies the location and file name a json file describing the project is written to.',\r\n        hint:  ParameterHint.File\r\n    })\r\n    json: string;\r\n\r\n    @Option({\r\n        name:  'version',\r\n        short: 'v',\r\n        help:  'Print the TypeDoc\\'s version.',\r\n        type:  ParameterType.Boolean\r\n    })\r\n    version: boolean;\r\n\r\n    @Option({\r\n        name:  'help',\r\n        short: 'h',\r\n        help:  'Print this message.',\r\n        type:  ParameterType.Boolean\r\n    })\r\n    help: boolean;\r\n\r\n    /**\r\n     * Run TypeDoc from the command line.\r\n     */\r\n    protected bootstrap(options?: Object): OptionsReadResult {\r\n        const result = super.bootstrap(options);\r\n        if (result.hasErrors) {\r\n            process.exit(ExitCode.OptionError);\r\n            return;\r\n        }\r\n\r\n        if (this.version) {\r\n            typescript.sys.write(this.toString());\r\n        } else if (this.help) {\r\n            typescript.sys.write(getOptionsHelp(this.options));\r\n        } else if (result.inputFiles.length === 0) {\r\n            typescript.sys.write(getOptionsHelp(this.options));\r\n            process.exit(ExitCode.NoInputFiles);\r\n        } else if (!this.out && !this.json) {\r\n            this.logger.error(\"You must either specify the 'out' or 'json' option.\");\r\n            process.exit(ExitCode.NoOutput);\r\n        } else {\r\n            const src = this.expandInputFiles(result.inputFiles);\r\n            const project = this.convert(src);\r\n            if (project) {\r\n                if (this.out) {\r\n                    this.generateDocs(project, this.out);\r\n                }\r\n                if (this.json) {\r\n                    this.generateJson(project, this.json);\r\n                }\r\n                if (this.logger.hasErrors()) {\r\n                    process.exit(ExitCode.OutputError);\r\n                }\r\n            } else {\r\n                process.exit(ExitCode.CompileError);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get isCLI(): boolean {\r\n        return true;\r\n    }\r\n}\r\n"]}