{"version":3,"file":"tag.js","sourceRoot":"","sources":["../../../../src/lib/models/comments/tag.ts"],"names":[],"mappings":";;AAKA;IAmBI,oBAAY,OAAe,EAAE,SAAkB,EAAE,IAAa;QAC1D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC3B,CAAC;IAKD,6BAAQ,GAAR;QACI,IAAM,MAAM,GAAQ;YAChB,GAAG,EAAG,IAAI,CAAC,OAAO;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,iBAAC;AAAD,CAAC,AAxCD,IAwCC;AAxCY,gCAAU","sourcesContent":["/**\r\n * A model that represents a single javadoc comment tag.\r\n *\r\n * Tags are stored in the [[Comment.tags]] property.\r\n */\r\nexport class CommentTag {\r\n    /**\r\n     * The name of this tag.\r\n     */\r\n    tagName: string;\r\n\r\n    /**\r\n     * The name of the related parameter when this is a ```@param``` tag.\r\n     */\r\n    paramName: string;\r\n\r\n    /**\r\n     * The actual body text of this tag.\r\n     */\r\n    text: string;\r\n\r\n    /**\r\n     * Create a new CommentTag instance.\r\n     */\r\n    constructor(tagName: string, paramName?: string, text?: string) {\r\n        this.tagName = tagName;\r\n        this.paramName = paramName || '';\r\n        this.text = text || '';\r\n    }\r\n\r\n    /**\r\n     * Return a raw object representation of this tag.\r\n     */\r\n    toObject(): any {\r\n        const result: any = {\r\n            tag:  this.tagName,\r\n            text: this.text\r\n        };\r\n\r\n        if (this.paramName) {\r\n            result.param = this.paramName;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"]}